{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Downloads/Taskoo/TaskManage/src/lib/prisma.js"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prisma = new  PrismaClient()\r\n\r\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAK,6HAAA,CAAA,eAAY;uCAEjB","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Downloads/Taskoo/TaskManage/src/app/api/auth/signup/route.js"],"sourcesContent":["import bcrypt from \"bcryptjs\";\r\nimport prisma from \"@/lib/prisma\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(req) {\r\n    try {\r\n        const body = await req.json();\r\n        const {email, password} = body;\r\n\r\n        const existingUser = await prisma.user.findUnique({\r\n            where : {email}\r\n        });\r\n        if (existingUser) {\r\n            return NextResponse.json({success : false, message : \"User Already Exists\"}, {status : 400})\r\n        }\r\n        const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n        const newUser =await prisma.user.create({\r\n            data : {email, hashedPassword},\r\n        });\r\n        return NextResponse.json({success : true, user : newUser}, {status : 201})\r\n    } catch (error) {\r\nreturn NextResponse.json({success : false, message : error.message},{status : 500})\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAG;IAC1B,IAAI;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAC,GAAG;QAE1B,MAAM,eAAe,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC9C,OAAQ;gBAAC;YAAK;QAClB;QACA,IAAI,cAAc;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAC,SAAU;gBAAO,SAAU;YAAqB,GAAG;gBAAC,QAAS;YAAG;QAC9F;QACA,MAAM,iBAAiB,MAAM,mIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,MAAM,UAAS,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACpC,MAAO;gBAAC;gBAAO;YAAc;QACjC;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAU;YAAM,MAAO;QAAO,GAAG;YAAC,QAAS;QAAG;IAC5E,EAAE,OAAO,OAAO;QACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAU;YAAO,SAAU,MAAM,OAAO;QAAA,GAAE;YAAC,QAAS;QAAG;IAC7E;AACJ","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}